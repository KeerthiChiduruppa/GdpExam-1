{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/page1/page1.component.css","webpack:///./src/app/page1/page1.component.html","webpack:///./src/app/page1/page1.component.ts","webpack:///./src/app/page2/page2.component.css","webpack:///./src/app/page2/page2.component.html","webpack:///./src/app/page2/page2.component.ts","webpack:///./src/app/pagereview/pagereview.component.css","webpack:///./src/app/pagereview/pagereview.component.html","webpack:///./src/app/pagereview/pagereview.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Page1Component } from \"src/app/page1/page1.component\";\nimport { Page2Component } from \"src/app/page2/page2.component\";\nimport { PagereviewComponent } from \"src/app/pagereview/pagereview.component\";\n\nconst routes: Routes = [ { path: '',component: Page1Component },\n{ path: 'part2',component: Page2Component },\n{ path: 'feedback',component: PagereviewComponent } ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"*{\\r\\n    background-color: white;\\r\\n}\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Page1Component } from './page1/page1.component';\nimport { Page2Component } from './page2/page2.component';\nimport { PagereviewComponent } from './pagereview/pagereview.component';\nimport {HttpModule} from '@angular/http'\nimport {FormsModule} from '@angular/forms' \nimport { HttpService } from 'src/app/http.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Page1Component,\n    Page2Component,\n    PagereviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Http} from '@angular/http'\nimport {Injectable} from \"@angular/core\"\n\n@Injectable()\nexport class HttpService{\n    form = {}\n\n    constructor(private http:Http){}\n\n    setForm(form){\n            this.form = form\n            console.log(this.form)\n    }\n    getForm(){\n        return this.form\n    }\n    postService(){\n        return this.http.post('/ ',this.form)\n    }\n\n}","module.exports = \"form{\\r\\nborder: 2px solid black;\\r\\nposition: absolute;\\r\\nleft: 35%;\\r\\ntop: 10%;\\r\\nwidth: 35em;\\r\\nheight: 22em;\\r\\npadding: 20px;\\r\\nbackground-color: white\\r\\n}\\r\\n\\r\\n#submit{\\r\\n    position: absolute;\\r\\n    right: 5%;\\r\\n    bottom: 5%;\\r\\n}\"","module.exports = \"<form #formpart1=\\\"ngForm\\\" (ngSubmit)=\\\"signin(formpart1)\\\">\\n  <div class=\\\"form-group row col-sm-12\\\">\\n    <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">Make</label>\\n    <div class=\\\"col-sm-6\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"Enter Make\\\" ngModel name=\\\"Make\\\">\\n    </div>\\n  </div>\\n    <div class=\\\"form-group row col-sm-12\\\">\\n        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"inlineFormCustomSelect\\\">Model</label>\\n        <div class=\\\"col-sm-6\\\">\\n          <select class=\\\"form-control\\\" id=\\\"inlineFormCustomSelect\\\" ngModel name=\\\"Model\\\">\\n            <option value=\\\"Civic\\\">Civic</option>\\n            <option value=\\\"Odyssey\\\">Odyssey</option>\\n            <option value=\\\"Pilot\\\">Pilot</option>\\n            <option value=\\\"Accord\\\">Accord</option>\\n          </select>\\n        </div>\\n       \\n    </div>\\n  <div class=\\\"form-group row col-sm-12\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Year</label>\\n    <div class=\\\"col-sm-6\\\">\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Year\\\" ngModel name=\\\"Year\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row col-sm-12 \\\"  >\\n\\n      <legend class=\\\"col-form-label col-sm-2\\\" >Type</legend>\\n\\n        <div class=\\\"col-sm-3\\\">\\n          <input class=\\\"col-sm-3\\\" type=\\\"radio\\\" name=\\\"Type\\\" id=\\\"gridRadios1\\\" value=\\\"Sedan\\\" ngModel checked>\\n          <label class=\\\"col-form-label col-sm-9\\\" for=\\\"gridRadios1\\\">\\n            Sedan\\n          </label>\\n        </div>          \\n        <div class=\\\"form-check col-sm-3\\\">\\n          <input class=\\\"col-sm-3\\\" type=\\\"radio\\\" name=\\\"Type\\\" id=\\\"gridRadios2\\\" value=\\\"Coupe\\\" ngModel>\\n          <label class=\\\"col-form-label col-sm-9\\\" for=\\\"gridRadios2\\\">\\n            Coupe\\n          </label>\\n        </div>\\n  </div>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary col-sm-2\\\" id=\\\"submit\\\">Next</button>\\n\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { HttpService } from \"src/app/http.service\";\n\n@Component({\n  selector: 'app-page1',\n  templateUrl: './page1.component.html',\n  styleUrls: ['./page1.component.css']\n})\nexport class Page1Component implements OnInit {\n\n  constructor(private router:Router,private http:HttpService) { }\n\n  ngOnInit() {\n  }\n\n  signin(form){\n    this.http.setForm(form.value)\n    this.router.navigateByUrl('/part2')\n  }\n\n}\n","module.exports = \"form{\\r\\n    border: 2px solid black;\\r\\n    position: absolute;\\r\\n    left: 35%;\\r\\n    top: 10%;\\r\\n    width: 35em;\\r\\n    height: 22em;\\r\\n    padding: 20px;\\r\\n    background-color: white\\r\\n    }\\r\\n\\r\\n#submit{\\r\\n    position: absolute;\\r\\n    right: 5%;\\r\\n    bottom: 5%;\\r\\n}\"","module.exports = \"<form #formpart2=\\\"ngForm\\\" (ngSubmit)=\\\"signin(formpart2)\\\">\\n\\n  <div class=\\\"form-group col-sm-12 row\\\">\\n      <legend class=\\\"col-form-label col-sm-2\\\">Features</legend>\\n\\n      <div class=\\\"col-sm-2\\\">\\n        <input type=\\\"checkbox\\\" id=\\\"GPS\\\" name=\\\"GPS\\\" value=\\\"GPS\\\" ngModel class=\\\"col-sm-3\\\">\\n        <label for=\\\"GPS\\\" class=\\\"col-form-label col-sm-9\\\">GPS</label>\\n      </div>\\n\\n      <div class=\\\"col-sm-5\\\">\\n        <input type=\\\"checkbox\\\" id=\\\"SecurityLock\\\" name=\\\"SecurityLock\\\" value=\\\"SecurityLock\\\" class=\\\"col-sm-2\\\" ngModel>\\n        <label for=\\\"SecurityLock\\\" class=\\\"col-form-label col-sm-10\\\">Security Lock</label>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <input type=\\\"checkbox\\\" id=\\\"CargoMat\\\" name=\\\"CargoMat\\\" value=\\\"CargoMat\\\" ngModel class=\\\"col-sm-2\\\">\\n        <label for=\\\"CargoMat\\\" class=\\\"col-form-label col-sm-10\\\">CargoMat</label>\\n      </div>\\n    \\n  </div>\\n   \\n  <div class=\\\"form-group row col-sm-12\\\">\\n    <label for=\\\"inputEmail3\\\" class=\\\"col-sm-4 col-form-label\\\">Purchase Date</label>\\n    <div class=\\\"col-sm-6\\\">\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"PurchaseDate\\\" ngModel name=\\\"PurchaseDate\\\">\\n    </div>\\n  </div>\\n  \\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"submit\\\">Submit</button>\\n  \\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { HttpService } from \"src/app/http.service\";\n\n@Component({\n  selector: 'app-page2',\n  templateUrl: './page2.component.html',\n  styleUrls: ['./page2.component.css']\n})\nexport class Page2Component implements OnInit {\n\n  constructor(private router:Router,private http:HttpService) { }\n\n  ngOnInit() {\n    \n  }\n\n  signin(form){\n      var formpart1 = this.http.getForm()\n      form.value['features'] = []   \n      for(var ele of ['GPS',\"SecurityLock\",\"CargoMat\"]){\n          if(form.value[ele]){\n            console.log(ele)\n            form.value['features'].push(ele)\n            console.log(form.value['features'])\n          }\n      }\n      this.router.navigateByUrl('/feedback')\n      this.http.setForm( { ...formpart1, ...form.value } )\n      this.http.postService().subscribe(\n        res => {\n          console.log(res)\n          this.router.navigateByUrl('/feedback')\n        },\n        err => {\n            console.log(err)\n        }\n      )\n      \n      \n  }\n\n\n}","module.exports = \"div{\\r\\n    border: 2px solid black;\\r\\n    position: absolute;\\r\\n    left: 35%;\\r\\n    top: 10%;\\r\\n    width: 35em;\\r\\n    height: 22em;\\r\\n    padding: 20px;\\r\\n    background-color: white\\r\\n}\"","module.exports = \"\\n\\n<div>\\n    The user selected the following input:  \\n    <ul>\\n      <li>{{ formData.Make }}  {{ formData.Model }}  {{ formData.Year }}  {{ formData.type}}</li>\\n      <li>with {{formData.features }}</li>\\n      <li>accessories on {{formData.PurchaseDate}}</li>\\n      The user will get {{discount}}% discount.\\n    </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { HttpService } from \"src/app/http.service\";\n\n@Component({\n  selector: 'app-pagereview',\n  templateUrl: './pagereview.component.html',\n  styleUrls: ['./pagereview.component.css']\n})\nexport class PagereviewComponent implements OnInit {\n\n  formData = {}\n  discount = 0\n\n  constructor(private http:HttpService) { }\n\n   ngOnInit() {\n    this.formData = this.http.getForm()\n    var date = new Date(this.formData['PurchaseDate']);\n    console.log(date.getUTCDate());  \n    this.discount = date.getUTCDate() % 2 === 0 ? 30 : 40\n    console.log(this.formData)\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}